version: '3.8'

services:
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile.frontend
      args:
        FRONTEND_PORT: ${FRONTEND_PORT}
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    volumes:
      - ../frontend:/app
      - /app/node_modules
    environment:
      # Env kind
      - FRONT_ENV=dev

      # Frontend info
      - FRONTEND_URL=http://localhost:{FRONTEND_PORT}

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile.backend
      args:
        BACKEND_API_PORT: ${BACKEND_API_PORT}
        BACKEND_API_HOST: ${BACKEND_API_HOST}
    ports:
      - "${BACKEND_API_PORT}:${BACKEND_API_PORT}"
    volumes:
      - ../backend/src:/app
    environment:
      ##### Env kind
      - API_ENV=dev

      - UVICORN_WORKERS=4

      ##### Auth systems
      # Activated auth systems
      - AUTH_EMAIL_PASSWORD=${AUTH_EMAIL_PASSWORD}
      - AUTH_MICROSOFT=${AUTH_MICROSOFT}
      - AUTH_GOOGLE=${AUTH_GOOGLE}
      - AUTH_APPLE=${AUTH_APPLE}
      - AUTH_FACEBOOK=${AUTH_FACEBOOK}

      # Backend API info
      - BACKEND_API_HOST=${BACKEND_API_HOST}
      - BACKEND_API_PORT=${BACKEND_API_PORT}
      - BACKEND_API_DEFAULT_ROUTE=${BACKEND_API_DEFAULT_ROUTE}

      # Microsoft Entra ID
      - ENTRA_ID_CLIENT_ID=${ENTRA_ID_CLIENT_ID}
      - ENTRA_ID_CLIENT_SECRET=${ENTRA_ID_CLIENT_SECRET}
      - ENTRA_ID_TENANT_ID=${ENTRA_ID_TENANT_ID}

      # Google
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}

      # Apple


      # Facebook
      - FACEBOOK_CLIENT_ID=${FACEBOOK_CLIENT_ID}
      - FACEBOOK_CLIENT_SECRET=${FACEBOOK_CLIENT_SECRET}

      # Strava
      - STRAVA_CLIENT_ID=${STRAVA_CLIENT_ID}
      - STRAVA_CLIENT_SECRET=${STRAVA_CLIENT_SECRET}

      # JWT Configuration
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}


      ##### Database
      # Database info
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
    depends_on:
      - postgres

  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "${DATABASE_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

volumes:
  postgres_data:
