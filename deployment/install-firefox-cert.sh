#!/usr/bin/env bash

# Adds the local development certificate generated by generate-ssl.sh to
# every Firefox profile on the current machine so that HTTPS works without
# MOZILLA_PKIX_ERROR_SELF_SIGNED_CERT errors.

set -euo pipefail

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
CONFIG_FILE="${SCRIPT_DIR}/.env.ssl"
if [[ -f "${CONFIG_FILE}" ]]; then
  # shellcheck disable=SC1090
  set -a
  source "${CONFIG_FILE}"
  set +a
fi

DEFAULT_CERT_PATH="${SSL_CERT_PATH:-${SCRIPT_DIR}/ssl/server.crt}"
DEFAULT_CERT_NAME="${SSL_CERT_NAME:-${SSL_DOMAIN:-}}"
DEFAULT_PROFILE_GLOB="${FIREFOX_PROFILE_GLOB:-${HOME}/.mozilla/firefox/*.default*}"

CERT_PATH="${1:-${DEFAULT_CERT_PATH}}"
CERT_NAME="${2:-${DEFAULT_CERT_NAME}}"
PROFILE_GLOB="${3:-${DEFAULT_PROFILE_GLOB}}"

if [[ -z "${CERT_NAME}" ]]; then
  echo "SSL_CERT_NAME or SSL_DOMAIN must be set in ${CONFIG_FILE##*/} (or pass a certificate name as the second argument)." >&2
  exit 1
fi

if [[ ! -f "$CERT_PATH" ]]; then
  echo "Certificate not found at $CERT_PATH" >&2
  exit 1
fi

if ! command -v certutil >/dev/null 2>&1; then
  echo "certutil (from libnss3-tools) is required. Install it with:" >&2
  echo "  sudo apt install --yes libnss3-tools" >&2
  exit 1
fi

FOUND=false
for PROFILE in $PROFILE_GLOB; do
  if [[ -d "$PROFILE" ]]; then
    FOUND=true
    echo "Installing certificate into Firefox profile: $PROFILE"
    certutil -d "sql:$PROFILE" -A -t "C,," -n "$CERT_NAME" -i "$CERT_PATH"
  fi
done

if [[ "$FOUND" == false ]]; then
  echo "No Firefox profiles found under $PROFILE_GLOB" >&2
  echo "Try overriding the profile glob: $0 [cert-path] [cert-name] '/path/to/profile/*.default*'" >&2
  echo "Or set FIREFOX_PROFILE_GLOB in ${CONFIG_FILE##*/}." >&2
  exit 1
fi

echo "Certificate imported into Firefox profiles successfully. Restart Firefox to apply."